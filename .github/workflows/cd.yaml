name: Deploy to NuGet

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Number'
        required: true

jobs:
  buildAndPush:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout Code
        
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
          
      - name: Restore Dependencies
        run: dotnet restore

      - name: Run Tests
        run: dotnet test --no-restore --verbosity normal
      
      - name: Build and Pack
        run: |
          dotnet build --configuration Release
          dotnet pack --configuration Release --no-build -p:Version=${{ github.event.inputs.version }} -o out

      - name: Push to NuGet
        run: dotnet nuget push out/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Install DocFX
        run: dotnet tool install --global docfx
      
      - name: Build documentation
        run: docfx docfx_project\docfx.json
      
      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docfx_project/_site
          
      - name: Set up Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create Tag
        run: |
          tag="${{ github.event.inputs.version }}"
          if ! git rev-parse $tag >/dev/null 2>&1; then
            git tag $tag
            git push origin $tag
          else
            echo "Tag $tag already exists!"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}